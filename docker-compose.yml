services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
      POSTGRES_DB: authdb
    ports:
      - "5433:5432"
    volumes:
      # Mount your .sql files if you want Postgres to run them on first startup
      - ./Backend/src/database/sql/schema.sql:/docker-entrypoint-initdb.d/2.schema.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-service:
    # Using Node 18 alpine
    image: node:18-alpine
    working_dir: /app

    # We'll mount the entire Backend folder into /app
    volumes:
      - ./Backend:/app
      - app_node_modules:/app/node_modules

    # Install deps, build the project, then run it
    command: sh -c "npm install && npm run build && npm start"

    environment:
      DATABASE_URL: "postgresql://authuser:authpass@postgres:5432/authdb"
      CRYPT_SECRET: "hello"

    depends_on:
      - postgres

    ports:
      - "4001:4000"

volumes:
  # Named volume for node_modules so it won't be overwritten by the host mount
  app_node_modules: